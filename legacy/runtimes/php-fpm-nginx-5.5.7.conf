name:    "php-fpm-nginx-5.5.7"

# See ../Verification.md for release verification

# FPM notes:
#
#  * We stick with the default usercode of 'nobody'; there's no compelling
#    argument against it which still applies in a container environment with
#    dedicated container-per-instance and virtualised users.

sources [
  # As of PHP 5.3.3, FPM is included as part of the core
  { url: "https://apcera-sources.s3.amazonaws.com/php/php-5.5.7.tar.gz",
    sha256: "7b954338d7dd538ef6fadbc110e6a0f50d0b39dabec2c12a7f000c17332591b8" },

  # libraries used for various PHP packages
  { url: "https://apcera-sources.s3.amazonaws.com/php/freetype-2.5.2.tar.gz",
    sha256: "376bc32bd907cb6f1a826a9c52627747b6d95259129df0f2c8faf99491168b55" },
  { url: "https://apcera-sources.s3.amazonaws.com/php/jpegsrc.v9.tar.gz",
    sha256: "c4e29e9375aaf60b4b79db87a58b063fb5b84f923bee97a88280b3d159e7e535" },
  { url: "https://apcera-sources.s3.amazonaws.com/php/libpng-1.6.7.tar.gz",
    sha256: "5d3be409d4ed4425923ad8677fc45497abb43c6b9cfd5beafe7dfc6f2a94f24b" },
]

build_depends [ { package: "build-essential" } ]
depends       [ { os: "linux" },
                { package: "nginx" } ]
provides      [ { runtime: "php-fpm-nginx" },
                { runtime: "php-fpm-nginx-5" },
                { runtime: "php-fpm-nginx-5.5" },
                { runtime: "php-fpm-nginx-5.5.7" },
                { runtime: "php" },
                { runtime: "php-5" },
                { runtime: "php-5.5" },
                { runtime: "php-5.5.7" } ]

# FIXME(phil): we don't currently support 'conflicts'; when we do, this package
# should conflict with the regular php one, since I've chosen to minimise
# runtime differences in php install location, increasing the odds that
# client-code can be cleanly toggled between the two PHP providers (since it's
# unlikely to be common that scripts correctly use $PHP_*_PATH variables).

environment { "PATH":          "/opt/apcera/php-5.5.7/bin:$PATH",
              "PHP_BASE_PATH": "/opt/apcera/php-5.5.7",
              "PHP_EXT_PATH":  "/opt/apcera/php-5.5.7/ext" }

# NB: keep the non-Apache/apxs build steps synced between this package
#     and the equivalent Apache-based php, so that the same facilities
#     are available in both.
build (
      export BUILDPATH=`pwd`
      export INSTALLPATH=/opt/apcera/php-5.5.7
      export PATH="${INSTALLPATH:?}/bin:$PATH"

      tar xzvf jpegsrc.v9.tar.gz
      (
        cd jpeg-9
        ./configure --prefix=${INSTALLPATH:?}
        make
        sudo make install
      )

      tar xzvf libpng-1.6.7.tar.gz
      (
        cd libpng-1.6.7
        ./configure --prefix=${INSTALLPATH:?}
        make
        sudo make install
      )

      tar xzvf freetype-2.5.2.tar.gz
      (
        cd freetype-2.5.2
        ./configure --prefix=${INSTALLPATH:?}
        make
        sudo make install
      )

      # fix up for PHP configure
      (
        cd ${INSTALLPATH:?}/include/freetype2
        sudo ln -s . freetype
      )

      tar xzvf php-5.5.7.tar.gz
      (
        cd php-5.5.7
        ./configure \
          --prefix=${INSTALLPATH:?} \
          --enable-fpm \
          --with-mysql \
          --with-pdo-mysql \
          --with-pgsql \
          --with-pdo-pgsql \
          --with-bz2 \
          --with-curl \
          --with-gd \
          --with-gettext \
          --with-iconv \
          --with-mhash \
          --with-openssl \
          --with-pcre-regex \
          --with-pear \
          --with-xmlrpc \
          --with-zend-vm \
          --with-zlib \
          --enable-bcmath \
          --enable-calendar \
          --enable-dba \
          --enable-exif \
          --enable-gd-native-ttf \
          --enable-mbstring \
          --enable-shmop \
          --enable-sigchild \
          --enable-soap \
          --enable-sockets \
          --enable-sysvmsg \
          --enable-zip \
          --with-jpeg-dir=${INSTALLPATH:?} \
          --with-png-dir=${INSTALLPATH:?} \
          --with-freetype-dir=${INSTALLPATH:?} \
          --with-config-file-path=/app/conf
        make
        sudo make install

        sudo mkdir ${INSTALLPATH:?}/conf ${INSTALLPATH:?}/init.d
        sudo cp php.ini-production ${INSTALLPATH:?}/conf/php.ini
        sudo cp sapi/fpm/php-fpm.conf ${INSTALLPATH:?}/conf/php-fpm.conf
        sudo cp sapi/fpm/init.d.php-fpm ${INSTALLPATH:?}/init.d/php-fpm
      )
)
