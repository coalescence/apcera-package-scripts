name:      "zookeeper-3.4.10"
namespace: "/wg/pkg/packages"

# To use this package in a job, be sure to do the following:
#   - Expose TCP ports 2181 (also 2888 and 3888 if clustered)
#    - NFS service for `/opt/apache/zookeeper-3.4.10/data`
#    - If ZooKeeper is to be clustered (recommended minimum of 3 nodes):
#        1. Set ZK_CLUSTERED to `true`
#        2. Set ZK_CLUSTER_SIZE to the number of ZKK nodes being deployed
#        3. Set ZK_NODE_ID to the node ID for each ZK instance

sources [
  { url: "https://wg-sources.s3.amazonaws.com/zookeeper/zookeeper-3.4.10.tar.gz",
    sha256: "7f7f5414e044ac11fee2a1e0bc225469f51fb0cdf821e67df762a43098223f27" }
]

include_files [
  "zookeeper-3.4.10_start-zk.sh"
]

depends       [ { os: "ubuntu" },
                { runtime: "java-8" } ]

provides      [ { package: "zookeeper" },
                { package: "zookeeper-3" },
                { package: "zookeeper-3.4.10" } ]

environment { "PATH":                 "/opt/apache/zookeeper-3.4.10/bin:$PATH",
              "ZK_HOME":               "/opt/apache/zookeeper-3.4.10",
              "ZK_CONFIG_DIR":         "/opt/apache/zookeeper-3.4.10/conf",
              "ZOOKEEPER_VERSION":    "3.4.10" }

build (

  # Setup
  export INSTALLPATH=/opt/apache/zookeeper-3.4.10

  # Untar and place zookeeper binaries
  tar -zxf zookeeper-3.4.10.tar.gz
  mkdir -p /opt/apache
  mv zookeeper-3.4.10/ $INSTALLPATH

  # Create custom directories for zookeeper
  mkdir $INSTALLPATH/data
  mkdir $INSTALLPATH/custom_scripts

  # Configure Zookeeper
  mv $INSTALLPATH/conf/zoo_sample.cfg $INSTALLPATH/conf/zoo.cfg
  sed -i -r '/#/d' $INSTALLPATH/conf/zoo.cfg
  sed -i -r "s|/tmp/zookeeper|$INSTALLPATH/data|g" $INSTALLPATH/conf/zoo.cfg

  # Place custom scripts
  mv zookeeper-3.4.10_start-zk.sh $INSTALLPATH/custom_scripts/start-zk.sh

  # Fix permissions
  chown -R runner:runner $INSTALLPATH
  chmod +x $INSTALLPATH/custom_scripts/*.sh

)
