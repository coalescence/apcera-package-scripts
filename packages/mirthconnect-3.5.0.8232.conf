name:      "mirthconnect-3.5.0.8232"
namespace: "/wg/pkg/packages"

# When creating an app from this package, be sure to bind a database service
# called `mirth_db` to the app. You can also use a generic service with
# the proper formatted URI if connecting to a DB not managed by Apcera.

sources [
  { url: "http://downloads.mirthcorp.com/connect/3.5.0.8232.b2153/mirthconnect-3.5.0.8232.b2153-unix.tar.gz",
    sha256: "9da6556870926ce2c5dc4acbf6c50c8d78b486e06bf514561a9b35f74d16d5ee" },
]

depends  [ { os: "ubuntu" },
           { runtime: "java-8" } ]

provides [ { package: "mirthconnect" },
           { package: "mirthconnect-3.5.0" },
           { package: "mirthconnect-3.5.0.8232" } ]

environment { "PATH": "/opt/mirth/mirthconnect-3.5.0.8232:$PATH",
              "MIRTH_HOME": "/opt/mirth/mirthconnect-3.5.0.8232"}

build (

    # Extract tarball
    export INSTALLPATH=/opt/mirth/mirthconnect-3.5.0.8232/
    echo "Extracting contents..."
    tar -zxf mirthconnect-3.5.0.8232.b2153-unix.tar.gz
    mkdir -p ${INSTALLPATH}

    # Stage application binaries
    cp -a "Mirth Connect"/. $INSTALLPATH

    # Update configuration files
    sed -i -e 's/^-Xmx.*/-Xmx{{env_map.JAVA_HEAP_SIZE}}m/g' $INSTALLPATH/mcserver.vmoptions
    sed -i -e 's/= derby/= {{ (binding_service "mirth_db").URI.Scheme }}/g' $INSTALLPATH/conf/mirth.properties
    sed -i -e 's/^database.url = jdbc.*/database.url = jdbc:{{ (binding_service "mirth_db").URI.Scheme }}:\/\/{{ (binding_service "mirth_db").URI.Host }}:{{ (binding_service "mirth_db").URI.Port }}\/{{ (binding_service "mirth_db").URI.TrimmedPath }}/g' $INSTALLPATH/conf/mirth.properties
    sed -i -e 's/^database.username.*/database.username = {{ (binding_service "mirth_db").URI.User }}/g' $INSTALLPATH/conf/mirth.properties
    sed -i -e 's/^database.password.*/database.password = {{ (binding_service "mirth_db").URI.Password }}/g' $INSTALLPATH/conf/mirth.properties
    #sed -i -e 's/8080/80/g' -e 's/8443/443/g' $INSTALLPATH/conf/mirth.properties

    # Fix permissions
    chown -R runner:runner $INSTALLPATH

    # Register templates
    echo "${INSTALLPATH}/mcserver.vmoptions" > /TEMPLATES
    echo "${INSTALLPATH}/conf/mirth.properties" >> /TEMPLATES

)
