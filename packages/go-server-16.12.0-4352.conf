name:      "go-server-16.12.0-4352"
namespace: "/wg/pkg/packages"

sources [
  { url: "https://download.gocd.io/binaries/16.12.0-4352/generic/go-server-16.12.0-4352.zip",
    sha256: "6ca2b62426167821f9e182f4c4173adb8cf86057b4d8deed8fb4fc29c2881ce5" }
]

build_depends [ { package: "build-essential" } ]
depends       [ { os: "ubuntu-14.04" },
                { runtime: "java-8" } ]
provides      [ { package: "go-server" },
                { package: "go-server-16.12.0" },
                { package: "go-server-16.12.0-4352" } ]

environment { "PATH": "/opt/thoughtworks/go-server-16.12.0-4352:$PATH" }

build (
  # Set up build environment
  export INSTALLPATH=/opt/thoughtworks/go-server-16.12.0-4352

  # Extract from source and stage package binaries
  unzip go-server-16.12.0-4352.zip
  mkdir -p $INSTALLPATH/db
  mkdir $INSTALLPATH/config
  mkdir $INSTALLPATH/artifacts
  mkdir $INSTALLPATH/server_work_dir
  cp -a go-server-16.12.0 $INSTALLPATH
  chown -R runner:runner $INSTALLPATH

  # Create start script
  mkdir /app
  cat <<EOF > /app/goserver.sh
# Set up runtime environment
export SERVER_MEM="512m"
export SERVER_MAX_MEM=\$MEM_ALLOC
export GO_SERVER_PORT=\$PORT
export SERVER_WORK_DIR=$INSTALLPATH/server_work_dir
export GO_SERVER_HOME=/opt/thoughtworks/go-server-16.12.0-4352

# Run GoCD Server
cd \$GO_SERVER_HOME
./server.sh
EOF
  chown -R runner:runner /app
  chmod +x /app/goserver.sh
)
