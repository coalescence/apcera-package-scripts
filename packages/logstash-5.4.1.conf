name:      "logstash-5.4.1"
namespace: "/wg/pkg/packages"

# Environment variables required when using this package:
#   - ES_HOST
#   - LS_JAVA_OPTS
#   - LS_PIPELINE

sources [
  { url: "https://artifacts.elastic.co/downloads/logstash/logstash-5.4.1.tar.gz",
    sha256: "3f79360908f01505f3e9dde5a185249b52f1e8d41b390f97e20b659de25c23d9" }
]

include_files [
  "logstash-5.4.1-syslog.conf",
  "logstash-5.4.1.yml",
  "logstash-5.4.1_start-ls.sh"
]

depends       [ { os: "ubuntu-14.04" },
                { runtime: "java-8" } ]

provides      [ { package: "logstash" },
                { package: "logstash-5.4" },
                { package: "logstash-5.4.1" } ]

environment { "PATH": "/opt/elastic/logstash-5.4.1/bin:$PATH",
              "LS_HOME": "/opt/elastic/logstash-5.4.1",
              "LS_SEMVER": "5.4.1" }

build (
  export INSTALLPATH=/opt/elastic/logstash-5.4.1
  export LS_SEMVER=5.4.1

  tar -xvf logstash-5.4.1.tar.gz
  mkdir -p $INSTALLPATH/pipeline
  mkdir -p $INSTALLPATH/custom_scripts
  cp -a logstash-5.4.1/. $INSTALLPATH
  cp logstash-5.4.1-*.conf $INSTALLPATH/pipeline/
  cp logstash-5.4.1.yml $INSTALLPATH/config/logstash.yml
  cp logstash-5.4.1_start-ls.sh $INSTALLPATH/custom_scripts/start-ls.sh

  # Fix permissions
  chown -R runner:runner $INSTALLPATH
  chmod +x $INSTALLPATH/custom_scripts/start-ls.sh

  # Register the templates we just created.
  echo "${INSTALLPATH}/config/logstash.yml" > /TEMPLATES
  cd $INSTALLPATH/pipeline
  for conf_file in $(ls *.conf); do
    echo "${INSTALLPATH}/pipeline/${conf_file}" >> /TEMPLATES
  done
)
